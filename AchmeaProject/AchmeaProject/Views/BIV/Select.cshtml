@model ProjectCreateViewModel;
@{
                <link rel="stylesheet" href="~/css/BIV-checklist.css" />
                            <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
                                        <script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
                                                    <script src="~/lib/jquery/dist/jquery.min.js"></script> }

<div class="container-fluid">
        <form asp-controller="Biv" asp-action="Select" method="post">

            <!-- title -->
            <div class="row  d-flex justify-content-center">
                <h2>Biv classificaties</h2>
            </div>
            <div asp-validation-summary="All" class="text-danger d-flex justify-content-center"></div>


            <!-- Project information to pass through -->
            @Html.HiddenFor(model => Model.Project.Title)
            @Html.HiddenFor(model => Model.Project.CreationDate)
            @Html.HiddenFor(model => Model.Project.Description)
            @Html.HiddenFor(model => @Model.Project.UserID)

            <!-- AspectAreas information to pass through -->
            @for (int i = 0; i < @Model.AspectAreas.Count; i++)
            {
@Html.HiddenFor(model => Model.AspectAreas[i].ID)
                @Html.HiddenFor(model => Model.AspectAreas[i].Title)
                                @Html.HiddenFor(model => Model.AspectAreas[i].Description)
                                                @Html.HiddenFor(model => Model.AspectAreas[i].isSelected)}

            @if (Model.Members.Length > 0)
            {
                for (int i = 0; i < Model.Members.Length; i++)
                {
@Html.HiddenFor(model => Model.Members[i])}
            }

            @if (Model.Users.Count > 0)
            {
                for (int i = 0; i < Model.Users.Count; i++)
                {
@Html.HiddenFor(model => Model.Users[i].UserID)
                    @Html.HiddenFor(model => Model.Users[i].Name)}
                                }

            <div class="row">
                <div class="col-3">
                    <h3>B</h3>
                </div>
                @for (var j = 0; j < @Model.Bivs.Count(e => e.Name.Contains("b")); j++)
                {
    <div class="col-3">
        <label class="checkboxlabel">
            @Model.Bivs[j].Name.Substring(1)
            @Html.HiddenFor(model => Model.Bivs[j].Name)
            @Html.HiddenFor(model => Model.Bivs[j].Id)
            @Html.CheckBoxFor(model => Model.Bivs[j].isSelected, new { @class = "bbb" })
            <span class="checkmark"></span>
        </label>
    </div>}
            </div>

            <div class="row">
                <div class="col-3">
                    <h3>I</h3>
                </div>
                @for (var k = 3; k < 6; k++)
                {
    <div class="col-3">
        <label class="checkboxlabel">
            @Model.Bivs[k].Name.Substring(1)
            @Html.HiddenFor(model => Model.Bivs[k].Name)
            @Html.HiddenFor(model => Model.Bivs[k].Id)
            @Html.CheckBoxFor(model => Model.Bivs[k].isSelected, new { @class = "iii" })
            <span class="checkmark"></span>
        </label>
    </div>}
            </div>
            <div class="row">
                <div class="col-3">
                    <h3>V</h3>
                </div>
                @for (var m = 6; m < 9; m++)
                {
    <div class="col-3">
        <label class="checkboxlabel">
            @Model.Bivs[m].Name.Substring(1)
            @Html.HiddenFor(model => Model.Bivs[m].Name)
            @Html.HiddenFor(model => Model.Bivs[m].Id)
            @Html.CheckBoxFor(model => Model.Bivs[m].isSelected, new { @class = "vvv" })

            <span class="checkmark"></span>
        </label>
    </div>}
            </div>
            <br />
            <input type="hidden" name="submitclicked" value="">
            <div class="row">
                <div class="col-5"></div>
                <div class="col-2 d-flex justify-content-center">
                    <button class="btn btn-primary" type="submit" value="back" onclick="submitClick(this)" name="submitButton">Vorige</button>
                </div>
                <div class="col-1"></div>
                <div class="col-2 d-flex justify-content-center">
                    <button class="btn btn-primary" type="submit" value="next" onclick="submitClick(this)" name="submitButton">Volgende</button>
                </div>
            </div>
        </form>
</div>

<script>
    $("input:checkbox").on('click', function () {
        // in the handler, 'this' refers to the box clicked on
        var $box = $(this);
        if ($box.is(":checked")) {
            // the name of the box is retrieved using the .attr() method
            // as it is assumed and expected to be immutable
            var group = "input:checkbox[class='" + $box.attr("class") + "']";
            // the checked state of the group/box on the other hand will change
            // and the current value is retrieved using .prop() method
            $(group).prop("checked", false);
            $box.prop("checked", true);
        } else {
            $box.prop("checked", false);
        }
    });
</script>

<script>
    var coll = document.getElementsByClassName("collapsible");
    var i;

    for (i = 0; i < coll.length; i++) {
        coll[i].addEventListener("click", function () {
            this.classList.toggle("active");
            var content = this.nextElementSibling;
            if (content.style.display === "block") {
                content.style.display = "none";
            } else {
                content.style.display = "block";
            }
        });
    }
</script>

<script>
    $(document).on("click", "[type='checkbox']", function (e) {
        if (this.checked) {
            $(this).attr("value", "true");
        } else {
            $(this).attr("value", "false");
        }
    });

    function submitClick(button) {
        button.form.submitclicked.value = button.value;
    }
</script>




