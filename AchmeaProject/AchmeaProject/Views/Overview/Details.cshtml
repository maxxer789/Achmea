@using Achmea.Core;
@model ProjectDetailViewModel
@{
    ViewData["Title"] = "Details";
}

@{
    var comments = ViewBag.Comments as IEnumerable<AchmeaProject.Models.CommentViewModel>;
}

<link rel="stylesheet" href="~/css/Details.css" />
<div class="con-header">
    <div class="header-title">
        <h4>@Model.Title</h4>
        <br /><br />
        Created at @Model.CreationDate
    </div>
    <div class="header-desc">
        @Model.Description
        <br /><br />
        Client:
        <br /><br />
        @*Developer: @Model.User.Firstname @Model.User.Lastname*@
    </div>
    <div class="row">
        <div class="col-6">
            <ul id="messageOutput"></ul>
        </div>
    </div>
</div>
<div class="con-content">
    @foreach (SecurityRequirementProject req in Model.RequirementProject)
    {
    <div class="con-requirements">
        <div class="requirement-info">
            @Model.Requirements.Where(requirement => requirement.RequirementId == req.SecurityRequirementId).SingleOrDefault().Name
        </div>
        <div class="requirement-check">
            @{
                string status = req.Status.ToString();
                status = status.Replace("_", " ");
            }
            @status
        </div>
        <div class="collapsible">
            @Model.Requirements.Where(requirement => requirement.RequirementId == req.SecurityRequirementId).SingleOrDefault().Description
            <br /><br />
            <div class="message-info">
                Opmerkingen
            </div>
            <br />
            <div class="collapsible message-board">
                <div class="row">
                    <div class="col-12">
                        <hr />
                    </div>
                </div>
                <div class="row">
                    <div class="message-container" id="message-container">
                        @foreach (var comment in comments)
                        {
                            if (comment.ProjectReqId == req.SecurityRequirementProjectId)
                            {
                                <ul id="existingcomments">@comment.UserName: &nbsp;&nbsp; @comment.Message</ul>
                            }
                        }
                        <ul id="@req.SecurityRequirementProjectId+messageOutput"></ul>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12">
                        <hr />
                    </div>
                </div>
                <form>
                    <div class="container">
                        <div class="row">&nbsp;</div>
                        <div class="row">
                            <div>Message:</div>
                            <div class="message-box"><input type="text" class="message-input" id="@req.SecurityRequirementProjectId" /></div>
                            <input onclick="ButtonClick(@req.SecurityRequirementProjectId, i)" type="submit" id="sendButton" value="Send Message" />
                        </div>
                    </div>
                </form>

                <div class="row">
                    <div class="col-12">
                        <hr />
                    </div>
                </div>
            </div>
            <br /><br />
            <form onsubmit="return false;">
                <label>Bewijsmateriaal uploaden: </label><br />
                <input type="file" name="evidence" /><br /><br />
                <input type="submit" value="Uploaden" />
            </form>
            <br />
        </div>
    </div>
     }
</div>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script src="~/lib/aspnet/signalr/dist/browser/signalr.js"></script>

<script>
    var coll = document.getElementsByClassName("requirement-info");
    var i;

    for (i = 0; i < coll.length; i++) {
        coll[i].addEventListener("click", function () {
            this.classList.toggle("active");
            var content = this.nextElementSibling.nextElementSibling;
            if (content.style.display === "block") {
                content.style.display = "none";
            } else {
                content.style.display = "block";
            }
        });
    }

    var coll = document.getElementsByClassName("message-info");
    var i;

    for (i = 0; i < coll.length; i++) {
        coll[i].addEventListener("click", function () {
            this.classList.toggle("active");
            var content = this.nextElementSibling.nextElementSibling;
            if (content.style.display === "block") {
                content.style.display = "none";
            } else {
                content.style.display = "block";

                var element = document.getElementById("message-container");
                element.scrollTop = element.scrollHeight;
            }
        });
    }

    var connection = new signalR.HubConnectionBuilder().withUrl("/hubs/comment").build();

    
    //Disable send button until connection is established
    document.getElementById("sendButton").disabled = true;

    connection.on("ReceiveMessage", function (user, message, id,) {
        var msg = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
        var encodedMsg = user + ": " + msg;
        var ul = document.createElement("ul");
        ul.textContent = encodedMsg;
        document.getElementById(id + '+messageOutput').appendChild(ul);

        new Notification('message');

        var element = document.getElementById("message-container");
        element.scrollTop = element.scrollHeight;
    });

    connection.start().then(function () {
        document.getElementById("sendButton").disabled = false;
    }).catch(function (err) {
        return console.error(err.toString());
    });

    function ButtonClick(id, cancerID) {

        event.preventDefault();
        var requestData = {
            message: document.getElementById(id).value,
            id: id,
            cancerID: cancerID
        };

        $.ajax({
            type: "POST",
            url: "/Comment/SendMessage",
            dataType: "json",
            traditional: true,
            data: requestData,
        });
    };
</script>